syntax = "proto3";

package grpc;

import "google/protobuf/empty.proto";

service grpc_store {
    //index-client
    rpc BatchWrite(BatchWrites) returns (google.protobuf.Empty);
    rpc QueryPages(IndexQuery) returns (stream ReadBatch);
    rpc Delete(BatchDeletes) returns (google.protobuf.Empty);

    //storage-client
    rpc PutChunks(PutChunksRequest) returns (google.protobuf.Empty);
    //In GetChunks rpc request send buf as nil
    rpc GetChunks(GetChunksRequest) returns (stream GetChunksResponse);
    rpc DeleteChunks(ChunkID) returns (google.protobuf.Empty);

    //table-client
    rpc ListTables(google.protobuf.Empty) returns (ListTablesResponse);
    rpc CreateTable(TableDesc) returns (google.protobuf.Empty);
    rpc DeleteTable(TableName) returns (google.protobuf.Empty);
    rpc DescribeTable(TableName) returns (DescribeTableResponse);
    rpc UpdateTable(UpdateTableRequest) returns (google.protobuf.Empty);

    //used by storage-client & index-client
    rpc Stop(google.protobuf.Empty) returns (google.protobuf.Empty);
}

message PutChunksRequest {
    repeated Chunk chunks = 1;
}

message GetChunksRequest {
    repeated Chunk chunks = 1;
}

message GetChunksResponse {
    repeated Chunk chunks = 1;
}

message Chunk {
    bytes encoded     = 1;
    string key        = 2;
    string tableName  = 3;
}

message ChunkID {
    string chunkID = 1;
}

message TableName {
    string tableName = 1;
}

message WriteBatch {
    repeated IndexEntry writes     = 1;
    repeated IndexEntry deletes    = 2;
}

message BatchWrites {
    repeated IndexEntry writes    = 1;
}

message BatchDeletes {
    repeated IndexEntry deletes   = 1;
}

message ReadBatch {
    repeated Row rows = 1;
}

message Row {
    bytes rangeValue = 1;
    bytes value      = 2;
}

message IndexEntry {
    string tableName = 1;
    string hashValue = 2;
    bytes rangeValue = 3;
    bytes value      = 4;
}

message IndexQuery {
    string tableName          = 1;
    string hashValue          = 2;
    bytes rangeValuePrefix    = 3;
    bytes rangeValueStart     = 4;
    bytes valueEqual          = 5;
    bool immutable            = 6;
}

message UpdateTableRequest {
    TableDesc current  = 1;
    TableDesc expected = 2;
}

message DescribeTableResponse {
    TableDesc desc  = 1;
    bool isActive   = 2;
}

message TableDesc {
    string name                  = 1;
    bool useOnDemandIOMode       = 2;
    int64 provisionedRead        = 3;
    int64 provisionedWrite       = 4;
    map<string, string> tags     = 5;
}

message ListTablesResponse {
    repeated string tableNames = 1;
}

message Labels {
    string name  = 1;
    string value = 2;
}


